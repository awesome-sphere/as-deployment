kind: Service
apiVersion: v1
metadata:
  name: as-seating-svc
spec:
  selector:
    app: as-seating
  ports:
  - protocol: TCP
    port: 9004
---
# SEATING SERVICE DEPLOYMENT
apiVersion: apps/v1
kind: Deployment
metadata:
  name: as-seating
  labels:
    app: as-seating
spec:
  replicas: 1
  selector:
    matchLabels:
      app: as-seating
  template:
    metadata:
      labels:
        app: as-seating
      annotations:
        sidecar.opentelemetry.io/inject: "true" 
    spec:
      containers:
      - name:  as-seating
        image: ghcr.io/awesome-sphere/as-seating/as-seating:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 9004
        env:
        - name: KAFKA_HOST
          valueFrom:
            secretKeyRef:
              name: seating-secret
              key: KAFKA_HOST
        - name: KAFKA_PORT
          valueFrom:
            secretKeyRef:
              name: seating-secret
              key: KAFKA_PORT
        - name: KAFKA_TOPIC
          valueFrom:
            secretKeyRef:
              name: seating-secret
              key: KAFKA_TOPIC
        - name: KAFKA_TOPIC_PARTITION
          valueFrom:
            secretKeyRef:
              name: seating-secret
              key: KAFKA_TOPIC_PARTITION
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: seating-secret
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            secretKeyRef:
              name: seating-secret
              key: REDIS_PORT
      imagePullSecrets:
      - name: dockerconfigjson-github-com
---
# SEATING CONSUMER DEPLOYMENT
apiVersion: apps/v1
kind: Deployment
metadata:
  name: as-seating-consumer
  labels:
    app: as-seating-consumer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: as-seating-consumer
  template:
    metadata:
      labels:
        app: as-seating-consumer
    spec:
      containers:
      - name:  as-seating-consumer
        image: ghcr.io/awesome-sphere/as-seating-consumer/as-seating-consumer:latest
        imagePullPolicy: Always
        env:
        - name: KAFKA_HOST
          valueFrom:
            secretKeyRef:
              name: seating-secret
              key: KAFKA_HOST
        - name: KAFKA_PORT
          valueFrom:
            secretKeyRef:
              name: seating-secret
              key: KAFKA_PORT
        - name: KAFKA_TOPIC
          valueFrom:
            secretKeyRef:
              name: seating-secret
              key: KAFKA_TOPIC
        - name: KAFKA_TOPIC_PARTITION
          valueFrom:
            secretKeyRef:
              name: seating-secret
              key: KAFKA_TOPIC_PARTITION
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: seating-secret
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            secretKeyRef:
              name: seating-secret
              key: REDIS_PORT
      imagePullSecrets:
      - name: dockerconfigjson-github-com
# ---
# apiVersion: opentelemetry.io/v1alpha1
# kind: OpenTelemetryCollector
# metadata:
#   name: sidecar-for-as-seating
# spec:
#   mode: sidecar
#   hostNetwork: true
#   config: |
#     receivers:
#       otlp:
#         protocols:
#           grpc:
#           http:
#     processors:
#       batch:
#       memory_limiter:
#         limit_mib: 400
#         spike_limit_mib: 100
#         check_interval: 5s
#     exporters:
#       logging:
#       otlp:
#         endpoint: "otel-collector-collector.default:4317"
#         tls:
#           insecure: true
#         sending_queue:
#           num_consumers: 4
#           queue_size: 100
#         retry_on_failure:
#           enabled: true
#     service:
#       pipelines:
#         traces:
#           receivers: [otlp]
#           processors: [memory_limiter, batch]
#           exporters: [otlp]
#         metrics:
#           receivers: [otlp]
#           exporters: [otlp]
#         logs:
#           receivers: [otlp]
#           exporters: [otlp]